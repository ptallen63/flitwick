{"version":3,"sources":["index.js"],"names":["_babyparse","require","_chalk","_outputToFile","_parseMatchListArray","_parseMatchToArray","_generateNewList","_parseConfig","_getMatchedTotal","_displayArt","success","_chalk2","default","green","flitwick","matchListPath","matchToListPath","matchField","_displayArt2","Error","matchListParse","_babyparse2","parseFiles","_parseConfig2","matchToListParse","matchArray","_parseMatchListArray2","data","matchToObject","_parseMatchToArray2","matchToFields","fields","matchToData","newList","_generateNewList2","unparse","_outputToFile2","csv","matched","_getMatchedTotal2","console","log"],"mappings":"2IACA,IAAAA,YAAAC,QAAA,4DACAC,OAAAD,QAAA,gDAGAE,cAAAF,QAAA,uEAJAG,qBAAAH,QAAA,4FAMAI,mBAAAJ,QAAA,sFACAK,iBAAAL,QAAA,gFACAM,aAAAN,QAAA,oEAPAO,iBAAAP,QAAA,gFASAQ,YAAAR,QAAA,iEAEMS,QAAUC,QAAAC,QAAMC,MAPtBC,SAAA,SAAAC,EAAAC,EAAAC,GAiBE,IAHA,EAAAC,aAAAN,YAGKG,EAAiB,KAAM,IAAII,OAAM,gCACtC,KAAKH,EAAmB,KAAM,IAAIG,OAAM,mCACxC,KAAKF,EAAc,KAAM,IAAIE,OAAM,iCAInC,IAAMC,GAAiBC,YAAAT,QAAKU,WAAWP,GAAeQ,cAAAX,UApBxDY,EAAAH,YAAAT,QAAAU,WAAAN,GAAAO,cAAAX,UAwBQa,GAAa,EAAAC,sBAAAd,SAAoBQ,EAAeO,KAAMV,GAvB9DW,GAAA,EAAAC,oBAAAjB,SAAAY,EAAAG,KAAAV,GA2BQa,EAAgBF,EAAcG,OA1BtCC,EAAAJ,EAAAD,KA8BQM,GAAU,EAAAC,kBAAAtB,SAAgBa,EAAYO,EAAaF,EAAeb,GA5BpEP,EAAUW,YAAAT,QAAAuB,QAAAF,IAkCd,EAAAG,eAAAxB,SAAayB,EA3Cf,IAAAC,IAAA,EAAAC,kBAAA3B,SAAAqB,EAeEO,SAAAC,IAAA/B,QAAAA,MAAA4B,EAAA,qBACAE,QAAAC,IAAA9B,QAAAC,QAAAC,MAAA,+BAoCA2B,QAAQC,IAAI9B,QAAAC,QAAMC,MAAM,6DAjCQM","file":"index.js","sourcesContent":["/* eslint-disable no-console */\nimport Baby from 'babyparse';\nimport chalk from 'chalk';\n\n// Functions\nimport outputToFile from './outputToFile';\nimport parseMatchListArray from './parseMatchListArray';\nimport parseMatchToArray from './parseMatchToArray';\nimport generateNewList from './generateNewList';\nimport parseConfig from './parseConfig';\nimport getMatchedTotal from './getMatchedTotal';\nimport displayArt from './displayArt';\n\nconst success = chalk.green;\n// const error = chalk.red.bold;\n// const info = chalk.blue.bold;\n\n//  Get Files\nconst flitwick = (matchListPath, matchToListPath, matchField) => {\n  // Show title\n  displayArt();\n\n  // Check\n  if (!matchListPath) { throw new Error('Match list argument not found'); }\n  if (!matchToListPath) { throw new Error('Match To list argument not found'); }\n  if (!matchField) { throw new Error('Match Field argument not found'); }\n\n\n  // parse files\n  const matchListParse = Baby.parseFiles(matchListPath, [parseConfig]);\n  const matchToListParse = Baby.parseFiles(matchToListPath, [parseConfig]);\n\n  // parse data\n  const matchArray = parseMatchListArray(matchListParse.data, matchField);\n  const matchToObject = parseMatchToArray(matchToListParse.data, matchField);\n\n  // Set matchTo data\n  const matchToFields = matchToObject.fields;\n  const matchToData = matchToObject.data;\n\n  // Generate New List\n  const newList = generateNewList(matchArray, matchToData, matchToFields, matchField);\n\n  // Parse back to csv\n  const csv = Baby.unparse(newList);\n\n  // Write to File\n  outputToFile(csv);\n\n\n  // Wite some stats\n  const matched = getMatchedTotal(newList);\n\n\n  console.log(success(`   ${matched} records matched`));\n  console.log(chalk.green('   Created output.csv file'));\n  console.log(chalk.green('   \\n Thank You for using FlitwickJS \\n'));\n};\n\nexport default flitwick;\n"]}