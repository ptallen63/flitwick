{"version":3,"sources":["parseMatchToArray.js"],"names":["array","matchField","_typeof","matchFieldPosition","indexOf","Error","err","console","log","newObject","fields","forEach","record","field","push","trim","obj","f","count","e","fieldsObj"],"mappings":"0SAAe,SAAUA,EAAOC,GAC9B,GAAqB,YAAjB,mBAAOD,GAAP,YAAAE,QAAOF,IACT,OAAO,CAGT,IAAMG,GAAqBH,EAAM,GAAGI,QAAQH,EAC5C,KACE,GAAIE,KAAuB,EAAI,KAAM,IAAIE,OAAM,yBAC/C,MAAOC,GALR,MADCC,SAAQC,IAARF,IACD,EAKA,GAACG,MACAC,IAEAV,GAAAW,QAAA,SAAAC,GACD,GAAAA,IAAAZ,EAAA,GASGA,EAAM,GAAGW,QAAQ,SAAAE,GAAA,MAASH,GAAOI,KAAKD,EAAME,cAPhD,CASI,GAAMC,MAPJP,EAAY,CACZC,GAAAA,QAAN,SAAAO,GASMD,EAAIN,EAAOQ,IAAUD,EAPrBN,GAAQ,GAEO,IAAAQ,GAAST,EAAAA,EAA1BS,KADFV,EAEOU,GAAAH,KAIHA,IAAAA,KAMAP,OALAS,GAAAA,QAAS,SAATD,GACDG,EAHDH,GAAA,OAKAG,EAAMD,QAAQlB,MAEZQ,KAAAA,EAAAC,OAAAU","file":"parseMatchToArray.js","sourcesContent":["export default function (array, matchField) {\n  if (typeof array !== 'object') {\n    return -1;\n  }\n\n  const matchFieldPosition = array[0].indexOf(matchField);\n  try {\n    if (matchFieldPosition === -1) throw new Error('Match Field not Found');\n  } catch (err) {\n    /* eslint-disable no-console */\n    console.log(err);\n    return -1;\n  }\n\n  // Get Fields position\n\n  const newObject = {};\n  const fields = [];\n\n  array.forEach((record) => {\n    if (record === array[0]) {\n      array[0].forEach(field => fields.push(field.trim()));\n    } else {\n      const obj = {};\n      let count = 0;\n      record.forEach((f) => {\n        obj[fields[count]] = f;\n        count += 1;\n      });\n\n      const e = obj[matchField];\n      if (e) {\n        newObject[e] = obj;\n      }\n    }\n  });\n  const fieldsObj = {};\n  fields.forEach((f) => {\n    fieldsObj[f] = null;\n  });\n  fieldsObj.matched = null;\n\n  return { data: newObject, fields: fieldsObj };\n}\n"]}